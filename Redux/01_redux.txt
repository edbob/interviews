// что такое Redux:
//     это предсказуемый контейнер состояния для js приложений,
//     он учит думать о приложении как о начальном состоянии которая
//     изменяется последовательностью действий, хорошо сочетается с
//     React отвечает за views live (вюсь-лайф) приложения а Redux за
//     хронение данных и работу с ними!

// Для начало:
//      устанавливаем Redux,
//      иницелизируем его в проэкте 
     const redux = require('redux');
    //  создаем стор const 
     store = redux.createStore(playlist);
    //  что такое стор(store)? это хранилище всех наших данных в приложении!
    //  на вход к сторы надо передовать функцию которая будет изменяется стор!
     function playlist(state = [], action){ //action обезательный атребут для функции
        if(action.type === 'ADD_TRACK'){//проверяем с помощью action.type равен ли type ADD_TRACK
            //если да то записываем в спрет ...state(это масиф новый стандарт ES2015) данные action.payload
            return [
                ...state,
                action.payload
            ];
        }
        return state;
    }

store.getState() //постмотреть состояния стора!
// как подписатся для изменения нашего стора чтобы знать ч
//то изменились данные в нем: для этого используется метод: subscribe();

store.subscribe(() => {//callback
    console.log('subscribe', store.getState());
})
// тепрь каждый раз когда будет совершатся какоето событие
// будут видны изменения стора!

//теперь давайте поменяем значение в сторе за это твечает функция: dispatch();
//функция: dispatch() принемает на вход обект

store.dispatch({ type: 'ADD_TRACK', payload: 'Smells like spirit'});
